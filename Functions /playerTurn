// Function for the second phase of the game - collecting sets.
void secondPhase(
	vector<string>& playerSets,
	vector<string>& computerSets
)
{
	cout << "\n=== Second Phase: Asking for collections ===" << endl;
	bool isPlayerTurn = true;
	// Check for a winner at the start of the phase.
	if (computerSets.empty())
	{
		cout << "Your sets: " << endl;
		cout << "\nYou have collected all the collections! You win!" << endl;
		return;
	}
	else if (playerSets.empty())
	{
		cout << "\nComputer has collected all the collections! Computer wins!"
			<< endl;
		return;
	}
	// Logic for alternating turns between the player and the computer.
	while (!playerSets.empty() && !computerSets.empty())
	{
		if (isPlayerTurn)
		{
			// The player asks for a collection.
			cout << "Enter the type of collection you want to ask for (e.g., 'A', '7'): ";
			string collectionType;
			cin >> collectionType;

			vector<string> Set = {
			"2", "3", "4", "5", "6", "7", "8", "9",
			"10", "J", "Q", "K", "A"
			};

			if (!hasCard(Set, collectionType))
			{
				cout << "That's not a card. Try again." << endl;
				continue;
			}

			// Проверка дали компютърът има исканата колекция
			auto it = find(computerSets.begin(), computerSets.end(), collectionType);
			if (it != computerSets.end()) {
				cout << "Computer gives you the collection of " << collectionType << "s!" << endl;
				playerSets.push_back(*it); // Добавяме колекцията към играча
				computerSets.erase(it);    // Премахваме колекцията от компютъра
				// Играчът продължава своя ход
				continue;
			}
			else {
				cout << "Computer does not have the collection of " << collectionType << "s. Your turn ends." << endl;
				// Преход към хода на компютъра
				isPlayerTurn = false;
			}
		}
		else
		{
			cout << "\nComputer's turn..." << endl;

			if (!computerSets.empty())
			{
				cout << "Your sets: " << endl;
				showHand(playerSets);

				const vector<string> values = {
				"2", "3", "4", "5", "6", "7", "8", "9",
				"10", "J", "Q", "K", "A"
				};

				string computerRequest = values[rand() % values.size()];

				cout << "Computer asks for the collection of "
					<< computerRequest << "s." << endl;


				bool found = false;

				for (size_t i = 0; i < playerSets.size(); ++i)
				{
					if (playerSets[i] == computerRequest)
					{
						found = true;
						string input;

						while (true)
						{
							cout << "Player, type '*' to give your collection: ";
							cin >> input;

							if (input == "*")
							{
								computerSets.push_back(playerSets[i]);
								playerSets.erase(playerSets.begin() + i);
								cout << "Player has given the "
									<< computerRequest
									<< " cards." << endl;
								break;
							}
							else
							{
								cout << "Player did not confirm correctly."
									<< endl;
							}
						}

						cout << "You give the collection of "
							<< computerRequest
							<< "s to the Computer."
							<< endl;
						break;
					}
				}

				if (!found)
				{
					cout << "You do not have the collection of "
						<< computerRequest
						<< "s. Computer's turn ends." << endl;
					isPlayerTurn = true;
				}
			}
		}
	}
}

